プロフィール画像
.envファイルの
APP_DEBUG=true
#APP_URL=http://localhost
APP_URL=http://127.0.0.1:8000
に変更

php artisan storage:link でpublic/storageにリンク作成

Livewireとは
PHPのみでVueやReactのようなリアクティブな動的コンポーネントを作成できるライブラリ
Blade構文を使えるのでLaravelと相性がいい

Livewireのデメリット
裏側でAjaxを使いサーバー通信しているため、
JavaScriptライブラリより多少表示スピードが遅い

Alpine.jsとはHTML内にJavascriptがかける
TailwindcssのJavaScript版
VueやReactよりシンプルで、Vueの構文に似ている。

アプリ名はenvファイルで設定。
APP_NAME=uReserve
その後、config/app.php内で設定される

publicフォルダに直接置く...初期ファイル
storageフォルダ...フォルダ内画像はgitHubにアップしない

認可(アクセス制限)
manager..表示・操作できる、
user...表示・操作できない
これらをLaravelではGate、Policyで対応
Gate...シンプル
Policy...特定のモデル・アクションを認可
事前にrole列を追記しておく

Role(役割)の考え方
追って追加する可能性も考慮しておく
数字の少ない方が権限が強い
1・・admin,
2, 3, 4,
5・・manager,
6,7,8,
9・・user
あとからmanagerとuserの間(有料会員)の権限なども
追加しやすい

php artisan vendor:publish - ̶tag=laravel-errorsで
カスタムエラーページを作成

php artisan vendor:publish --tag=laravel-pagination
でresouce/views/vendor/paginationフォルダに作成
今回はtailwind.blade.phpを修正
